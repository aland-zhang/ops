curl用法记录
2016/4/27


-----------查看DNS解析出的CDN节点的状态：
~]# nslookup www.qq.com |grep Address |grep -v "#53$" |cut -d " " -f2 |xargs -i curl -Iv -H "Host:www.qq.com" http://{}/

-o 输出重定向
-v 详细输出
-H 指定 Header

-----------仅获取头部：
~]# curl -I http://qq.com/ 
HTTP/1.1 302 Moved Temporarily
Server: squid/3.4.3
Date: Wed, 27 Apr 2016 06:21:53 GMT
Content-Type: text/html
Connection: keep-alive
Location: http://www.qq.com/
Expires: Wed, 27 Apr 2016 06:22:53 GMT
Cache-Control: max-age=60
Vary: Accept-Encoding
X-Cache: EXPIRED from shanghai.qq.com


-----------连接https
~]# curl -I https://120.25.161.130/
curl: (60) Peer certificate cannot be authenticated with known CA certificates
More details here: http://curl.haxx.se/docs/sslcerts.html

curl performs SSL certificate verification by default, using a "bundle"
 of Certificate Authority (CA) public keys (CA certs). If the default
 bundle file isn't adequate, you can specify an alternate file
 using the --cacert option.
If this HTTPS server uses a certificate signed by a CA represented in
 the bundle, the certificate verification probably failed due to a
 problem with the certificate (it might be expired, or the name might
 not match the domain name in the URL).
If you'd like to turn off curl's verification of the certificate, use
 the -k (or --insecure) option.


无证书时：
~]# curl -k https://www.abc.com/aaa
有证书时：
~]# curl -s --cacert ca.crt https://www.abc.com/aaa


-----------使用认证
~]# curl -u "username:password" http://www.abc.com/


-----------POST data
~]# curl -s --cacert ca.crt \
-H "Content-Type: application/xml" \
-u "user:pass" \
-d "
<action>
  <vm>
    <status>start</status>
  </vm>
</action>
" \
"http://www.abc.com//vms/uuid/start" -o ${f_xml}


-----------DELETE
~]# curl -s --cacert ca.crt \
-H "Content-Type: application/xml" \
-u "user:pass" \
-X DELETE \
"http://www.abc.com//vms/uuid/start" -o ${f_xml}


-----------CVE-2015-1635
~]# curl -v -H "Range: bytes=0-18446744073709551615" http://120.25.161.130/













