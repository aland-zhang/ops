几个查看系统状态的工具简介
2018/11/7
linux性能分析博大精深，各工具的详情请查看man和参考网络文章。

一、查看主机流量
1）nethogs
默认监听eth0，可以通过参数来指定：
nethogs eth1
nethogs eth0 eth1

2）iftop
iftop –n –f “port 80” 了解当前服务端口的流量情况。

iftop –i eth0 –nN 了解指定网卡的流量情况。

3）iptraf
图像界面

4）netstat
netstat -ant
显示对应的进程：
netstat -antp
[root@test79 ~]# netstat -antp |grep ':80'
tcp        1      0 10.0.200.10:39670           23.62.109.17:80             CLOSE_WAIT  3348/clock-applet
tcp        1      0 10.0.200.10:48423           23.62.109.73:80             CLOSE_WAIT  3082/clock-applet
tcp        0      0 :::80                       :::*                        LISTEN      23616/docker-proxy

5）ss
查看tcp连接
ss -ant
ss -ant src :80
ss -ant dst 10.0.200.21:80

加上-p参数也是查看对应的进程
[root@test79 ~]# ss -antp src :80
State      Recv-Q Send-Q                                Local Address:Port                                  Peer Address:Port
LISTEN     0      128                                              :::80                                              :::*      users:(("docker",23616,4))

注意：
ss -antp |awk '$4~/:500[0-9]/ {print $0}'
没有这个快：
netstat -antp |awk '$4~/:500[0-9]/ {print $0}'

实例数据对比；
~~~~ss
real	1m9.495s
user	0m9.216s
sys	1m0.022s
~~~~netstat
real	0m0.217s
user	0m0.015s
sys	0m0.161s

由此可见，耗时的差距可真大。在使用工具获取tcp链接的同时，如果要打印出进程，，建议使用 netstat 。


6）lsof
查看使用80端口的进程

[root@test79 ~]# lsof -i :80
COMMAND     PID USER   FD   TYPE DEVICE SIZE/OFF NODE NAME
clock-app  3082 root   15u  IPv4 733274      0t0  TCP 10.0.200.10:48423->a23-62-109-73.deploy.static.akamaitechnologies.com:http (CLOSE_WAIT)
clock-app  3348 root   15u  IPv4 733273      0t0  TCP 10.0.200.10:39670->a23-62-109-17.deploy.static.akamaitechnologies.com:http (CLOSE_WAIT)
docker    23616 root    4u  IPv6 319706      0t0  TCP *:http (LISTEN)


7）tcpdump
抓包


二、查看系统
常用的姿势

sar -d -p 2
iostat -d -x -k 2
vmstat -S M -w
top -b -n 1 -c
pidstat -d 2


1）sar
例如：查看硬盘状态，2秒间隔
[root@test79 ~]# sar -d -p 2
Linux 3.8.13-16.2.1.el6uek.x86_64 (test79.company.com)      06/08/2015      _x86_64_        (24 CPU)

04:39:00 PM       DEV       tps  rd_sec/s  wr_sec/s  avgrq-sz  avgqu-sz     await     svctm     %util
04:39:01 PM       sdb   1264.58  29166.67  18333.33     37.56     16.59     14.08      0.83    104.38
04:39:01 PM       sda      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00

查看网络设备统计数据：
[root@test79 ~]# sar -n DEV 2
查看cpu统计数据：
[root@test79 ~]# sar -p -P ALL 2


2）iostat
例如：查看硬盘状态，1秒间隔
[root@test79 ~]# iostat -d -k -x 1
Linux 3.8.13-16.2.1.el6uek.x86_64 (test79.company.com)      06/08/2015      _x86_64_        (24 CPU)

Device:         rrqm/s   wrqm/s     r/s     w/s    rkB/s    wkB/s avgrq-sz avgqu-sz   await  svctm  %util
sdb               0.00    18.54  202.34  121.90  7422.97  4829.88    75.58     0.06    0.20   0.45  14.52
sda               0.10     1.40    1.67    3.39   197.00   577.35   306.03     0.05    9.50   0.62   0.31


3）vmstat
[root@test79 ~]# vmstat -S M -w 2
procs -------------------memory------------------ ---swap-- -----io---- --system-- -----cpu-------
 r  b       swpd       free       buff      cache   si   so    bi    bo   in   cs  us sy  id wa st
 0  3        460        123        157       2821    0    0    15   135    0    0   2  1  89  9  0
 0  3        460        123        157       2821    0    0     0     0   82  118   0  0  75 25  0
 0  3        460        123        157       2821    0    0     0     0   86  112   0  0  75 25  0
 0  3        460        123        157       2821    0    0     0     0   93  125   0  0  75 25  0
 0  3        460        123        157       2821    0    0     0     0   71  101   0  0  75 25  0
 0  3        460        122        157       2821    0    0     0     0  573  128  11  0  67 22  0
 0  3        460        122        157       2821    0    0     0     0   68  108   0  0  75 25  0
 0  3        460        122        157       2821    0    0     0     0   72  105   0  0  75 25  0
 0  3        460        122        157       2821    0    0     0     0   79  111   0  0  75 25  0
 0  3        460        122        157       2821    0    0     0     0   74   97   0  0  75 25  0
 0  3        460        123        157       2821    0    0     0     0  432  124   8  0  70 22  0
 0  3        460        123        157       2821    0    0     0     0   88  115   0  0  75 25  0
 0  3        460        123        157       2821    0    0     0     0  101  112   0  0  75 25  0
 0  3        460        123        157       2821    0    0     0     0   82  104   0  0  75 25  0
 0  3        460        123        157       2821    0    0     0     0   97  109   0  0  75 25  0
 0  3        460        122        157       2821    0    0     0     0  591  150  11  0  66 22  0
 0  3        460        122        157       2821    0    0     0     0   95  120   0  0  75 25  0
 0  3        460        121        157       2821    0    0   118  1822  174  228   0  0  68 31  0
 0  2        460        121        157       2822    0    0   262  7662 1552 2595   2  1  61 36  0
 0  1        460        118        157       2825    0    0  1070  5506  911  557   9  2  75 14  0
 0  2        460        120        157       2826    0    0   656  2568 9824 21008  18  5  59 18  0
 0  2        460        119        157       2827    0    0   314     0  367  180   4  1  72 23  0
 0  2        460        118        157       2827    0    0     4     0  263  158   1  0  68 31  0
 0  2        460        117        157       2828    0    0   372     0  731  378   7  2  50 41  0
 1  1        460        117        157       2829    0    0   220     0  306  140   3  1  53 43  0
 0  2        460        114        157       2829    0    0   206     0  652  161  13  1  41 46  0
 0  2        460        113        157       2829    0    0    94     0  190  122   2  0  50 48  0
 0  2        460        113        157       2829    0    0   130     0  159  127   1  0  50 48  0


4）iotop
Total DISK READ: 11.67 M/s | Total DISK WRITE: 7.81 M/s
  TID  PRIO  USER     DISK READ  DISK WRITE  SWAPIN     IO>    COMMAND
25359 be/4 mysql    1043.11 K/s  857.35 K/s  0.00 % 99.99 % mysqld --defaults-file=

q：退出
r：反向排序
左右方向键：按某列排序


5）ps
ps aux | sort -nk3
排序查看 CPU 占用率最高的进程（最底下一行）

ps aux | sort -nk4
排序查看 MEM 占用率最高的进程（最底下一行）


6）ulimit
ulimit -a
查看系统限制


7）strace
strace -p pid
查看系统调用


8）top
top 大家都知道，本来不想记录的，还是补上吧，说说几个技巧吧。
PS：网络文章很多，不推荐，请自行按需搜索。

a）快捷键
z：打开颜色显示
x：单独显示排序的那一列
b：加粗显示运行进程的那一行
p: 按 cpu 利用率排序
m: 按 mem 利用率排序

b）命令行模式
打印一次
~]# top -n 1
打印一次完整的
~]# top -b -n 1
打印完整的命令行
~# top -b -c -n 1
打印指定pid的内容，并显示 thread
~]# top -b -n 1 -p 31441 -H


c）在 top 中，查看每个 core 的统计：
看到 load 很高（要注意一点，你的服务器有多少cpu，并非单纯的查看这个 load 的值是否超过 1 呢），，但是不知道消耗到哪里了，怎么办呢？例如下面的输出：
~]# top -n 1
Tasks: 124 total,   1 running, 123 sleeping,   0 stopped,   0 zombie
Cpu(s):  1.7%us,  0.5%sy,  0.0%ni, 89.0%id,  8.8%wa,  0.0%hi,  0.0%si,  0.0%st
Mem:   3920968k total,  3781008k used,   139960k free,   162768k buffers
Swap:  4194296k total,   471156k used,  3723140k free,  2932460k cached

  PID USER      PR  NI  VIRT  RES  SHR S %CPU %MEM    TIME+  COMMAND
 4227 root      20   0  589m 315m 1380 S  3.9  8.2  14858:22 carbon-cache.py
 2590 root      20   0  950m  64m 3756 S  2.0  1.7   1293:21 statsd config.j
 7845 root      20   0 15024 1220  896 R  2.0  0.0   0:00.01 top
    1 root      20   0 19232  600  428 S  0.0  0.0   0:34.87 init
    2 root      20   0     0    0    0 S  0.0  0.0   0:00.00 kthreadd
    3 root      RT   0     0    0    0 S  0.0  0.0   1:12.47 migration/0
    4 root      20   0     0    0    0 S  0.0  0.0   2:11.38 ksoftirqd/0
    5 root      RT   0     0    0    0 S  0.0  0.0   0:00.00 migration/0


咱们这样来分析，进入 top 后，在交互模式下（可用的命令请 man top 查看 INTERACTIVE Commands 这一节），按下数字1，查看每个cpu的状态：
~]# top
top - 15:25:22 up 176 days,  8:59,  1 user,  load average: 2.86, 2.87, 2.91
Tasks: 124 total,   1 running, 123 sleeping,   0 stopped,   0 zombie
Cpu0  :  0.3%us,  0.0%sy,  0.0%ni,  0.0%id, 99.7%wa,  0.0%hi,  0.0%si,  0.0%st
Cpu1  :  0.0%us,  0.3%sy,  0.0%ni, 99.7%id,  0.0%wa,  0.0%hi,  0.0%si,  0.0%st
Cpu2  :  0.0%us,  0.0%sy,  0.0%ni,100.0%id,  0.0%wa,  0.0%hi,  0.0%si,  0.0%st
Cpu3  :  0.3%us,  0.0%sy,  0.0%ni,  0.0%id, 99.7%wa,  0.0%hi,  0.0%si,  0.0%st
Mem:   3920968k total,  3728740k used,   192228k free,   162352k buffers
Swap:  4194296k total,   471156k used,  3723140k free,  2885372k cached


请注意，，，cpu0和cpu3的 %wa 都飙高了。


d）在 top 中，分析进程/线程的 cpu 占用情况
a、分析进程：
~]# top -c
按下 CTRL + p

pid=25308 的进程占用 cpu 最高

b、分析线程：
~]# top -Hp 25308

pid=25580 的线程占用 cpu 最高

c、分析堆栈
~]# pstack 25580




9）pidstat
参考：
http://weibo.com/ttarticle/p/show?id=2309404042490498950621

~]# pidstat -d 2
Linux 2.6.32-431.el6.x86_64 (test79.company.com)   03/03/2017      _x86_64(32 CPU)

06:34:10 PM       PID   kB_rd/s   kB_wr/s kB_ccwr/s  Command
06:34:12 PM     12848      0.00    324.64      0.00  glusterfsd
06:34:12 PM     43987    228.02      0.00      0.00  qemu-kvm
06:34:12 PM     47625   1826.09      0.00      0.00  swapoff
06:34:12 PM     48242      3.86      0.00      0.00  qemu-kvm
06:34:12 PM     48520      7.73      0.00      0.00  qemu-kvm



ZYXW、参考
1. [通过vmstat学习CPU和进程性能监控](http://www.talkwithtrend.com/Article/161357)
